int longestIncreasingSubsequence(vector<int>& nums) {
	int n = nums.size();
	vector<int> dp(n + 1, INT_MAX);
	dp[0] = INT_MIN;
	for(auto num: nums) {
		int l = 0, r = n; 
		int idx = -1;
		while(l <= r) {
			int mid = (l + r) / 2;
			if(dp[mid] < num) {
				idx = mid + 1;
				l = mid + 1;
			} else {
				r = mid - 1;
			}
		}
		dp[idx] = min(dp[idx], num);
	}
	for(int i = n; i >= 0; i--) {
		if(dp[i] != INT_MAX) {
			return i;
		}
	}
	return -1;
}
