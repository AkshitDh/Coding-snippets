long long count(vector<int>& a, int &n) {
        if(n == 1) return 0;
        int mid = n / 2;
        vector<int> left, right;
        for(int i = 0; i < mid; i++) {
            left.push_back(a[i]);
        }
        for(int i = mid; i < n; i++) {
            right.push_back(a[i]);
        }
        int l = left.size(), r = right.size();
        long long ans = count(left, l) + count(right, r);
        int i = 0, j = 0;
        while(i < l && j < r) {
            if(left[i] > 2ll * right[j]) {
                ans += l - i;
                j++;
            } else {
                i++;
            }
        }
        i = 0, j = 0;
        int k = 0;
        while(i < l && j < r) {
            if(left[i] < right[j])
                a[k] = left[i++];
            else 
                a[k] = right[j++];
            k++;
        }
        while(i < l)
            a[k++] = left[i++];
        while(j < r)
            a[k++] = right[j++];
        return ans;
    }
